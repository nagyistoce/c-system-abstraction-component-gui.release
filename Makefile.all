# We're in the mode of pure frame buffer at this time... at some piont this
# should reenable SDL library for gui environment debugging.
#__ENABLE_SDL__=1

# NO NO NO - okay this
# this breaks deadstart compilations
# INDIRECT_BUILD can affect any project not
# found in deadstart...

#__NO_AUTO_LIBS__=1
#export __NO_AUTO_LIBS__
COMMON_LIBS=sack
export COMMON_LIBS
DEST_PREFIX=sack_
export DEST_PREFIX
INDIRECT_BUILD=YES
BAG=yes
SACK_BUILD=1
export SACK_BUILD
export BAG
DEST_PREFIX=bag
export DEST_PREFIX
MAKEBAG=1

MORE_TARGETS=$(FINALDEST)/bin/$(DEST_SUFFIX)/interface.conf $(FINALDEST)/bin/$(DEST_SUFFIX)/interface.conf.static


ifndef BUILD_BAG_ONLY
ifndef __WINDOWS__
#EXTA_PROJECTS=src/displaylib/Makefile.display.bag 
#EXTA_PROJECTS2=src/displaylib/Makefile.display2.bag 
endif
        
MORE_PROJECTS+=$(EXTA_PROJECTS) src/msgsvr/server/Makefile \
        $(EXTA_PROJECTS2) src/SQLlib/Makefile.bag.pssql \
        src/msgsvr/servicelist/Makefile  \
        src/sysloglib/logger/Makefile  \
        src/systraylib/Makefile  \
        src/netlib/Makefile  \
        src/msgsvr/summoner/Makefile \
        src/msgsvr/leech_messages/Makefile \
        src/libmng/Makefile \
	src/utils/Makefile
PROJECTS=data
endif

LIBNAME=sack

ifdef __WINDOWS__
MONSRC=src/filesyslib/filemon/windowsfiles
else
MONSRC=src/filesyslib/filemon/linuxfiles
endif

SRCS= src/deadstart/deadlib      \
 src/sysloglib/syslog            \
 src/memlib/sharemem             \
 $(if $(__LINUX64__)$(__ARM__),,src/memlib/memoryasm)            \
 src/typelib/typecode            \
 src/typelib/binarylist          \
 src/typelib/familytree          \
 src/typelib/input               \
 src/typelib/msgqueue            \
 src/typelib/sets                \
 src/typelib/text                \
 src/timerlib/timers             \
 src/msgsvr/client/client        \
 src/fractionlib/fractions       \
 src/configlib/configscript      \
 src/procreglib/names            \
 src/netlib/ping                 \
 src/netlib/tcpnetwork           \
 src/netlib/udpnetwork           \
 src/netlib/whois                \
 src/netlib/network              \
 $(if $(__WINDOWS__),src/netlib/net_winsock2,)              \
 src/filesyslib/filescan         \
 src/filesyslib/pathops          \
 $(MONSRC)                       \
 src/filesyslib/filemon/allfiles \
 src/systemlib/system            \
 src/vectlib/vectlib             \
 src/sha1lib/sha1                \
 src/msgsvr/summoner/construct   \
 src/idlelib/idle                \
 $(if $(__ARM__),,src/SQLlib/sqlstub              \
 src/SQLlib/sqlutil              \
 src/SQLlib/sqlwrap              \
 src/SQLlib/sqlparse)             \
 src/deadstart/deadstop

ifndef __WINDOWS__
SYSLIBS=m $(if $(__ARM__),,odbc)
else
SYSLIBS=odbc32
endif


CXFLAGS=-DMEM_LIBRARY_SOURCE       \
    -DSYSLOG_SOURCE                \
    -D_TYPELIBRARY_SOURCE          \
    -DTIMER_SOURCE -DIDLE_SOURCE   \
    -DCLIENTMSG_SOURCE             \
    -DPROCREG_SOURCE               \
    -DFRACTION_SOURCE              \
    -DNETWORK_SOURCE               \
    -DCONFIGURATION_LIBRARY_SOURCE \
    -DFILESYSTEM_LIBRARY_SOURCE    \
    -DSYSTEM_SOURCE                \
    -DFILEMONITOR_SOURCE           \
    -DVECTOR_LIBRARY_SOURCE        \
    -DSHA1_SOURCE                  \
    -DCONSTRUCT_SOURCE             \
    -DSQLPROXY_LIBRARY_SOURCE \
    -DBAG     \
    -DSACK_BAG_DEFINED

ifeq '$(filter static_debug static_release,$(DEST))' ''
# first batch of icons - resource files are going to SUCK.
#RSRCS=src/systraylib/systray
RSRCS=all_resources
endif


ifeq '$(COMPILER)' 'arm'
# in a actual build system, this would not need
# jpeg, zlib or png.  But I don't have those libs here
# so it's probably best to just throw them in.
NEED_FREETYPE=1
NEED_MNG=1
NEED_PNG=1
NEED_ZLIB=1
NEED_JPEG=1
endif

ifdef __WINDOWS__
ifndef __NO_GUI__
NEED_FREETYPE=1
NEED_MNG=1
NEED_PNG=1
NEED_ZLIB=1
NEED_JPEG=1
endif
endif


ifdef NEED_ZLIB
########### ZLIB SRCS ##############
ZBASEDIR=src/zlib
ZLIB_SRCS= adler32 compress crc32 gzio uncompr deflate trees  \
           zutil inflate infblock inftrees infcodes infutil inffast
SRCS+=$(foreach src,$(ZLIB_SRCS),$(ZBASEDIR)/$(src))
INCLUDEDIRS+=$(SACK_BASE)/include/png
endif
########### JPEG SRCS ##############

ifdef NEED_JPEG
JBASEDIR=src/jpeg-6b
SYSDEPMEM=jmemnobs

# library object files common to compression and decompression
COMSRCS= jcomapi jutils jerror jmemmgr $(SYSDEPMEM)

# compression library object files
CLIBSRCS= jcapimin jcapistd jctrans jcparam jdatadst \
        jcinit jcmaster jcmarker jcmainct jcprepct \
        jccoefct jccolor jcsample jchuff jcphuff \
        jcdctmgr jfdctfst jfdctflt jfdctint

# decompression library object files
DLIBSRCS= jdapimin jdapistd jdtrans jdatasrc \
        jdmaster jdinput jdmarker jdhuff jdphuff \
        jdmainct jdcoefct jdpostct jddctmgr jidctfst \
        jidctflt jidctint jidctred jdsample jdcolor \
        jquant1 jquant2 jdmerge
# These objectfiles are included in libjpeg.lib
SRCS+=$(foreach src,$(CLIBSRCS) $(COMSRCS) $(DLIBSRCS),$(JBASEDIR)/$(src))
CXFLAGS+= -DJPEG_SOURCE
INCLUDEDIRS+=$(SACK_BASE)/include/jpeg
endif
########### PNG SRCS ##############
ifdef NEED_PNG
ifndef __NO_GUI__
PBASEDIR=src/libpng-1.2.31
include $(PBASEDIR)/Makefile.bag.part
endif
endif
#####################################
ifdef NEED_FREETYPE

FBASEDIR=src/freetype-2.3.7/src

CXFLAGS+=-DFREETYPE_SOURCE

FT_SRCS=autofit/autofit \
     base/ftbase \
     bdf/bdf \
     cache/ftcache \
     cff/cff \
     cid/type1cid \
     gxvalid/gxvalid \
     lzw/ftlzw \
     gzip/ftgzip \
     otvalid/otvalid \
     pcf/pcf \
     pfr/pfr \
     psnames/psmodule \
     psaux/psaux \
     pshinter/pshinter \
     raster/raster \
     sfnt/sfnt \
     smooth/smooth \
     truetype/truetype \
     type1/type1 \
     type42/type42 \
     winfonts/winfnt

FT_INCLUDEPATH=$(FBASEDIR)/../include/freetype
CXFLAGS+=-DFT2_BUILD_LIBRARY 
INCLUDEDIRS+=$(FT_INCLUDEPATH)

ifeq '1' '0'
FT_SRCS+=ftsystem ftinit ftdebug ftbase ftglyph ftbbox ftmm 
FT_SRCS+=ahmodule ahhint ahglobal ahangles ahglyph 
FT_SRCS+=winfnt
FT_SRCS+=cff
FT_SRCS+=pcf
FT_SRCS+=pfr
FT_SRCS+=type1
FT_SRCS+=bdf
FT_SRCS+=ftcache
FT_SRCS+=psaux
FT_SRCS+=type1cid
FT_SRCS+=psnames
FT_SRCS+=pshinter
FT_SRCS+=smooth
FT_SRCS+=truetype
FT_SRCS+=type42
FT_SRCS+=sfnt
FT_SRCS+=raster
FT_SRCS+=ftgzip
endif

SRCS+=$(foreach src,$(FT_SRCS),$(FBASEDIR)/$(src))
endif
#####################################

############### GENX Library #############

GENX_DESTINC1=$(SACK_BASE)/include/genxml
MORE_TARGETS+=$(GENX_DESTINC1)/genx.h $(GENX_DESTINC1)
SRCS+=src/genx/genx src/genx/charProps
CXFLAGS+=-DGENX_SOURCE

############### S-Expat Library #############

SEXPAT_DESTINC=$(SACK_BASE)/include/sexpat
MORE_TARGETS+=$(SEXPAT_DESTINC)/sexpat.h $(SEXPAT_DESTINC)/sexpat_external.h
SRCS+=src/sexpat/xmlparse src/sexpat/xmlrole src/sexpat/xmltok
CXFLAGS+=-DSEXPAT_SOURCE

######  SNMP #########################
ifdef __WINDOWS__
SRCS+=src/snmplib/asn1          src/snmplib/coexistance   src/snmplib/mib           src/snmplib/mibii          src/snmplib/mini-client      \
     src/snmplib/new-parse     src/snmplib/parse         src/snmplib/snmp_api      src/snmplib/snmp_api_error src/snmplib/snmp_api_util \
     src/snmplib/snmp_client   src/snmplib/snmp_dump     src/snmplib/snmp_error    src/snmplib/snmp_extra     src/snmplib/snmp_msg      \
     src/snmplib/snmp_pdu      src/snmplib/snmp_vars         src/snmplib/version
# test program to init mib...src/snmplib/test-mib  
CXFLAGS+=-DWIN32
endif

##### VIDLIB ################################

ifdef __WINDOWS__
CXFLAGS+=-DVIDEO_LIBRARY_SOURCE -DRENDER_LIBRARY_SOURCE -D_OPENGL_ENABLED
SRCS+=src/vidlib/vidlib src/vidlib/viddll src/vidlib/key src/vidlib/opengl src/vidlib/keydefs
SYSLIBS+= gdi32 user32 opengl32 glu32
else
SRCS+=src/displaylib/display src/displaylib/spacetree src/displaylib/display_image \
	src/displaylib/display_video src/displaylib/keybrd src/displaylib/calibrate
CXFLAGS+=-DDISPLAY_SOURCE -DRENDER_LIBRARY_SOURCE -DIMAGE_LIBRARY_SOURCE
CXFLAGS+=$(shell sdl-config --cflags)

SYSLIBS+=SDL pthread
LINK_LIBDIRS+=$(shell freetype-config --libs|sed 's/-l[^ ]*//g;s/-Wl[^ ]*//g;s/-L//' )
# filter out to only the library name
SYSLIBS+=$(shell freetype-config --libs|sed 's/-L[^ ]*//g;s/-l//g;s/-Wl[^ ]*//g' ) jpeg png z
endif

##### Image Library ################################

ifdef __WINDOWS__
INCLUDEDIRS+=$(SACK_BASE)/include/jpeg $(SACK_BASE)/include/png $(SACK_BASE)/include/imglib
endif
SRCS+= src/imglib/gifimage src/imglib/bmpimage src/imglib/font src/imglib/lucidaconsole \
      src/imglib/math src/imglib/smooth_sprite src/imglib/image src/imglib/line \
      src/imglib/jpgimage  src/imglib/pngimage \
      src/imglib/blotdirect \
      src/imglib/blotscaled src/imglib/alphatab src/imglib/alphastab src/imglib/interface
ifndef __LINUX64__
ifndef __ARM__
SRCS+=$(if $(shell nasm -v 2>&1),src/imglib/lineasm  \
      src/imglib/plotasm  \
      src/imglib/blatcolor src/imglib/blotdirasm src/imglib/blotdirshadeasm \
      src/imglib/blotdirmshadeasm \
      src/imglib/blotscaasm src/imglib/blotscashadeasm src/imglib/blotscamshadeasm,)
endif
endif

SRCS+=src/imglib/fntcache src/imglib/fntrender
CXFLAGS+=-DIMAGE_LIBRARY_SOURCE 

##### DISPLAYLIB ################################

ifdef __LINUX__
__DISPLAY_LAYER_LIB__=1
endif

ifdef __DISPLAY_LAYER_LIB__
SRCS+=display spacetree display_image \
	display_video keybrd calibrate $(if $(__WINDOWS__)$(__ENABLE_SDL__),,fb_sd_lmouse)
CXFLAGS+=-DDISPLAY_SOURCE

endif


##### Panther's Slick Interface ################################

COMN_SOURCES=borders mouse popups controls palette ctlbutton \
      ctltext ctledit ctlslider  ctllistbox \
      fileopen ctlscroll ctlmisc ctlprop \
                ctlcombo ctlsheet loadsave xml_load xml_save \
                calctl/clock calctl/analog
#I dunno about this guy... maybe someday
COMN_SOURCES+=psi_interface

# this is part of IMGlib also...
#COMN_SOURCES+=fntcache 
COMN_SOURCES+=fntdlg

ifdef __WINDOWS__
# include this systray for windows
COMN_SOURCES+=../systraylib/systray
else
# include this systray for linux
COMN_SOURCES+=../systraylib/systray_client
endif

CXFLAGS+=-DPSI_SOURCE
CXFLAGS+=-DSOURCE_PSI2 -DSYSTRAY_LIBRARAY

#SRCS1 = $(foreach src,$(COMN_SOURCES),src/psilib/$(src)) psi_interface
SRCS+= $(foreach src,$(COMN_SOURCES),src/psilib/$(src))
#CXFLAGS1=-DUSE_IMAGE_INTERFACE="g.MyImageInterface"

# calctl project is now included in standard PSI
PROJECT_DIRS=src/psilib/paltst src/psilib/listtst src/psilib/sheettst src/psilib/menutst \
		src/psilib/fonttst src/psilib/editctltest src/psilib/edittst
PROJECTS+=$(PROJECT_DIRS)
#$(foreach dir,$(PROJECT_DIRS),$(dir)/Makefile.$(dir).bag)
ifndef __WINDOWS__
CXFLAGS+=$(shell freetype-config --cflags)
LINK_LIBDIRS+=$(shell freetype-config --libs|sed 's/-l[^ ]*//g;s/-Wl[^ ]*//g;s/-L//' )
SYSLIBS+=$(shell freetype-config --libs|sed 's/-L[^ ]*//g;s/-l//g;s/-Wl[^ ]*//g' )
endif

#####################################
include $(SACK_BASE)/makefiles/makefile.single

ifdef __WINDOWS__
$(DEST)/ftgzip1.obj: CXFLAGS1+=-I$(SACK_BASE)/include/png
endif

#####################################
# GENX Custom rules - why? cause we thought we would be clever
# someday just move the genx header into the appropriate folder and commit it.
$(GENX_DESTINC1)/genx.h: $(SACK_BASE)/src/genx/genx.h | $(GENX_DESTINC1)
	-cp $(SACK_BASE)/src/genx/genx.h $@

#$(GENX_DESTINC1): 
#	-mkdir $(call SYSCMDPATH,$@)

$(call CLEANTARGET,$(GENX_DESTINC1)/genx.h):
	-rm -f $(subst /,$(SYSPATHCHAR),$(GENX_DESTINC1)/genx.h)
        
$(call CLEANTARGET,$(GENX_DESTINC1)):
	-rm -rf $(subst /,$(SYSPATHCHAR),$(GENX_DESTINC1))

#####################################
# SEXPAT Custom rules - why? cause we thought we would be clever
# someday just move the genx header into the appropriate folder and commit it.

$(SEXPAT_DESTINC)/sexpat.h: | $(SACK_BASE)/src/sexpat/expat.h $(SEXPAT_DESTINC)
	-cp $(SACK_BASE)/src/sexpat/expat.h $@

$(SEXPAT_DESTINC)/sexpat_external.h: $(SACK_BASE)/src/sexpat/expat_external.h | $(SEXPAT_DESTINC)
	-cp $(SACK_BASE)/src/sexpat/expat_external.h $@

#$(SEXPAT_DESTINC): 
#	-mkdir $(call SYSCMDPATH,$@)

$(call CLEANTARGET,$(SEXPAT_DESTINC)/sexpat.h):
	-rm -f $(subst /,$(SYSPATHCHAR),$(SEXPAT_DESTINC)/sexpat.h)

$(call CLEANTARGET,$(SEXPAT_DESTINC)/sexpat_external.h):
	-rm -f $(subst /,$(SYSPATHCHAR),$(SEXPAT_DESTINC)/sexpat_external.h)
        
$(call CLEANTARGET,$(SEXPAT_DESTINC)):
	-rm -rf $(subst /,$(SYSPATHCHAR),$(SEXPAT_DESTINC))

#####################################

$(call CLEANTARGET,$(FINALDEST)/bin/$(DEST_SUFFIX)/interface.conf):
	-rm -f $(subst /,$(SYSPATHCHAR),$(FINALDEST)/bin/$(DEST_SUFFIX)/interface.conf)

$(FINALDEST)/bin/$(DEST_SUFFIX)/interface.conf: $(SACK_BASE)/src/procreglib/interface.conf.all
	cp $< $@
#$(FINALDEST)/bin/$(DEST_SUFFIX)/interface.conf : src/procreglib/interface.conf
#	cp $< $@ 
$(FINALDEST)/bin/$(DEST_SUFFIX)/interface.conf.static : src/procreglib/interface.conf.static
	cp $< $@ 


