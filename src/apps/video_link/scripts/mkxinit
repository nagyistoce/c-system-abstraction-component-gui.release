#!/bin/bash

tmpfile=~/.xinitrc
logfile=/tmp/mkx.log
#echo $tmpfile

case $1 in 
    $(hostname))
    	# this command is to me... probably means that $2 is the
        # address that I should be sending on... 
        # perhaps there's a $3 for secondary audio/video $4?..... etc?
        echo "$(date) this computer is $1 and will be broadcasting at $2" >> $logfile
echo "#!/bin/bash
export PATH=$PATH:/usr/bin/X11:/usr/local/bin
alsactl restore -f /usr/src/FortuNet/asound.state.sound
nvidia-settings -l
xset -dpms
setterm -blank 0
xset s off
#cd /usr/src/FortuNet
#/usr/src/FortuNet/alpha2/ipc.fix.sems
#/usr/src/FortuNet/launchpad >/var/log/launchpad.log &
" > /root/.xinitrc
        echo "
#cd ~/bingolink/fbi_replicator_backup
cd /usr/src/FortuNet/fbi-replicator-0.1
# support for login dialog
#/usr/bin/xterm -geometry 80x20+1024+51 -e ./fbi-rep-server -p&
# some sort of login dialog...
#/usr/bin/xterm -geometry 80x20+1024+400 -e ./fbi-rep-gui $(hostname)& 
./blctrl setup
./blctrl host
make -f /usr/src/FortuNet/bdata_control.Makefile HOST=$4 &
DISPLAY=:0.1 ./ianson broadcast $2 &
#wait for server to be ready, then tell remotes
/usr/src/FortuNet/watchnetstat >/tmp/waiting
/usr/src/FortuNet/launchcmds /usr/src/FortuNet/mkxinit display $1 $2
/usr/src/FortuNet/launchcmds /usr/bin/make -f /usr/src/FortuNet/bdata_control.Makefile HOST=$4 set_current
exec /usr/bin/X11/xclock
           " >> /root/.xinitrc
      killall X
        ;;
    guestverify)
    	# this command is to me... probably means that $2 is the
        # address that I should be sending on... 
        # perhaps there's a $3 for secondary audio/video $4?..... etc?
        echo "$(date) this computer is $2 and will be broadcasting at $3" >> $logfile
echo "#!/bin/bash
export PATH=$PATH:/usr/bin/X11:/usr/local/bin
cp asound.state.nosound /etc/asound.state
alsactl restore -f /usr/src/FortuNet/asound.state.sound
nvidia-settings -l
xset -dpms
setterm -blank 0
xset s off
#cd /usr/src/FortuNet
#/usr/src/FortuNet/alpha2/ipc.fix.sems
#/usr/src/FortuNet/launchpad >/var/log/launchpad.log &
" > /root/.xinitrc
        echo "
#cd ~/bingolink/fbi_replicator_backup
cd /usr/src/FortuNet/fbi-replicator-0.1
# support for login dialog
#/usr/bin/xterm -geometry 80x20+1024+51 -e ./fbi-rep-server -p&
# some sort of login dialog...
#/usr/bin/xterm -geometry 80x20+1024+400 -e ./fbi-rep-gui $(hostname)& 
./blctrl setup
./blctrl guestverify
DISPLAY=:0.1 ./ianson broadcast $3 &
#wait for server to be ready, then tell remotes
/usr/src/FortuNet/watchnetstat >/tmp/waiting
/usr/src/FortuNet/launchcmds /usr/src/FortuNet/mkxinit display $2 $3
exec /usr/bin/X11/xclock
           " >> /root/.xinitrc
      killall X
        ;;
    localmode)
make -f /usr/src/FortuNet/bdata_control.Makefile local
echo "#!/bin/bash
export PATH=$PATH:/usr/bin/X11:/usr/local/bin
alsactl restore -f /usr/src/FortuNet/asound.state.sound
nvidia-settings -l
xset -dpms
setterm -blank 0
xset s off
cd /usr/src/FortuNet/alpha2
#/usr/src/FortuNet/alpha2/ipc.fix.sems
#/usr/src/FortuNet/launchpad >/var/log/launchpad.log &
" > /root/.xinitrc
    	echo "
./blctrl setup
./blctrl local
" >> /root/.xinitrc
         echo "exec /usr/bin/X11/xclock" >> /root/.xinitrc


      killall X
	;;
    display)
      case $2 in 
        $(hostname))
           echo "$(date) host is already $2 ignoring display..." >> $logfile
           ;;
        *)
      # everyone else passed as this command becomes a master...
      # slave all control to $2
      args=$#-1
        echo "$(date) this computer will be displaying $2 at $3" >> $logfile
echo "#!/bin/bash
export PATH=$PATH:/usr/bin/X11:/usr/local/bin
alsactl restore -f /usr/src/FortuNet/asound.state.sound
nvidia-settings -l
xset -dpms
setterm -blank 0
xset s off
#cd /usr/src/FortuNet
#/usr/src/FortuNet/alpha2/ipc.fix.sems
#/usr/src/FortuNet/launchpad >/var/log/launchpad.log &

" > /root/.xinitrc
	echo "cd /usr/src/FortuNet/fbi-replicator-0.1
./blctrl setup
./blctrl guest" >> /root/.xinitrc
	 echo "/usr/src/FortuNet/fbi-replicator-0.1/ianson display $3 &" >> /root/.xinitrc
         echo "exec /usr/bin/X11/xclock" >> /root/.xinitrc


      killall X
       ;;
       esac
       ;;
   DATABASE)
echo "#!/bin/bash
export PATH=/usr/kerberos/sbin:/usr/kerberos/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/X11R6/bin:/root/bin:/usr/bin/X11
alsactl restore -f /usr/src/FortuNet/asound.state.sound
nvidia-settings -l
xset -dpms
setterm -blank 0
xset s off

cd /usr/src/FortuNet/alpha2

/root/bin/ipc.fix.sems
rm /tmp/.share*

./watch_task ./launchpad -c $(hostname) -c vsrvr >/var/log/launchpad.log &

exec ./vserver           
exec /usr/bin/xclock
" > /root/.xinitrc
    killall X
   ;;
    *)
    echo "$(date) no operation... waitin for real operation" >> $logfile
    ;;
esac       
# need to build in some sort of safety....
#      echo "/root/work/testbed/bin/debug-wc/milk" >> /root/.xinitrc

