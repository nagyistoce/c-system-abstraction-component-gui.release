#!/bin/bash

#
# Parameters to this
#    $1 = command [broadcast/delegate_broadcast/display/delegate_display/LOCAL/RESETLOCAL]
#    $2 = related video address ( if display/delegate_display, is address of server )
#    $3 = remote bdata address ( if display, is address of bdata server )
#    $4 = local bdata address ( bdata box paired with this local server )
#

HOSTS="bdata.redrock 
  bdata.boulderstation 
  bdata.palacestation 
  bdata.santafestation 
  bdata.texasstation  
  bdata.sunsetstation"

NO_BDATA_CTRL=1
SOUNDSTATE_PATH=/usr/src/FortuNet
SCRIPT_PATH=/usr/src/FortuNet/alpha2
VLC_PATH=/usr/bin

echo "$(date):Thank you for $*" >> /tmp/ianson.log
#echo "SCRIPTSEZ: For the record \$1 is $1 \$2 is $2 "

    case "$1" in
       bdata_local)
           echo "bdata local specified... $4" >> /tmp/ianson.log
	   #SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/bdata_control local $4
           #SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/mark_ready2 bdata_control
       	   ;;
       bdata_slave)
           echo "bdata slave specified... $2" >> /tmp/ianson.log
	   #SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/bdata_control slave $2
           #SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/mark_ready2 bdata_control
       	   ;;
       bdata_host)
           echo "bdata host specified... $2 -> $3" >> /tmp/ianson.log
	   if [ -z $NO_BDATA_CTRL ]; then SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/bdata_control host $2 $3;fi
           SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/mark_ready2 bdata_control
           ;;
       bdata_reset)
           echo "bdata reset specified... $2" >> /tmp/ianson.log
	   if [ -z $NO_BDATA_CTRL ]; then SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/bdata_control reset $2; fi
           SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/mark_ready2 bdata_control
           ;;
       verify_display)
           echo "verify card display specified..." >> /tmp/ianson.log
           SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/vieoctrl display 1
           SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/mark_ready2 verify_display
           ;;
       normal_display)
           echo "normal display specified..." >> /tmp/ianson.log
           SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/vieoctrl pip 1 2
           SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/mark_ready2 verify_display
           ;;
       broadcast)                       

#           DISPLAY :0.1 vlc -vvv v4l:/dev/video  --sout '#transcode{vcodec=mp4v,vb=3072,height=480,width=720}:duplicate{dst=display:0.1,dst=standard{access=udp,mux=ts,url='$2',height=480,width=720,caching=0,ttl=0,hurry-up}}';
#           DISPLAY=:0.1 vlc --fullscreen -vvv v4l:/dev/video --sout '#transcode{vcodec=mp4v,acodec=mpga,vb=800,height=480,width=720,ab=192,channels=2}:duplicate{dst=display,dst=standard{access=udp,mux=ts,url='$2',height=480,width=720}}'; 
	   echo "$(date):broadcasting..." >>/tmp/ianson.log
           #SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/blctrl setup
	   #SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/blctrl host
           #echo $SOUNDSTATE_PATH/asound.state.nosound > /tmp/soundstate
	   #alsactl restore -f $(cat /tmp/soundstate)
           SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/mark_ready2 $1&
           #$SCRIPT_PATH/bdata_control reset $HOSTS
           DISPLAY=:0.1 exec $VLC_PATH/vlc --fullscreen -vvv v4l:/dev/video0 --sout '#transcode{vcodec=mp4v,acodec=mpga,vb=3072,height=480,width=720,ab=192,channels=2}:duplicate{dst=display,dst=standard{access=http,mux=ts,dst=0.0.0.0:1234,height=480,width=720}}' >/tmp/vlc.log 2>&1 
		;;
       delegate_broadcast)                       

           #SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/blctrl setup
	   #SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/blctrl guestverify
           #echo $SOUNDSTATE_PATH/asound.state.nosound > /tmp/soundstate
	   #alsactl restore -f $(cat /tmp/soundstate)
#           DISPLAY :0.1 vlc -vvv v4l:/dev/video  --sout '#transcode{vcodec=mp4v,vb=3072,height=480,width=720}:duplicate{dst=display:0.1,dst=standard{access=udp,mux=ts,url='$2',height=480,width=720,caching=0,ttl=0,hurry-up}}';
#           DISPLAY=:0.1 vlc --fullscreen -vvv v4l:/dev/video --sout '#transcode{vcodec=mp4v,acodec=mpga,vb=800,height=480,width=720,ab=192,channels=2}:duplicate{dst=display,dst=standard{access=udp,mux=ts,url='$2',height=480,width=720}}'; 
           echo "$(date):delegate broadcasting..." >>/tmp/ianson.log
           SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/mark_ready2 $1&
           DISPLAY=:0.1 exec $VLC_PATH/vlc --fullscreen -vvv v4l:/dev/video0 --sout '#transcode{vcodec=mp4v,acodec=mpga,vb=3072,height=480,width=720,ab=192,channels=2}:duplicate{dst=display,dst=standard{access=http,mux=ts,dst=0.0.0.0:1234,height=480,width=720}}' >/tmp/vlc.log 2>&1 
		;;
       display) 	
           #SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/blctrl setup
       	   #SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/blctrl guest

           #DISPLAY=:0.1 vlc --fullscreen udp:@$2                       
           #echo $SOUNDSTATE_PATH/asound.state.sound > /tmp/soundstate
	   #alsactl restore -f $(cat /tmp/soundstate)
	   #$SCRIPT_PATH/bdata_control host $3 $4
           SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/mark_ready2 $1&
           DISPLAY=:0.1 exec $VLC_PATH/vlc --fullscreen http://$2:1234 vlc:quit >/tmp/vlc.display.log 2>&1
           echo "$(date):I did not get here" > /tmp/crash
           ;;
       delegate_display) 	
           #SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/blctrl setup
	   #SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/blctrl guest

           #DISPLAY=:0.1 vlc --fullscreen udp:@$2                       
           #echo $SOUNDSTATE_PATH/asound.state.sound > /tmp/soundstate
	   #alsactl restore -f $(cat /tmp/soundstate)
           SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/mark_ready2 $1 &
           DISPLAY=:0.1 exec $VLC_PATH/vlc --fullscreen http://$2:1234 
           echo "$(date):I did not get here" > /tmp/crash
           ;;
	
          
       test)
          case "$2" in
             test)
               echo "SCRIPTSEZ: Test, test.";;
               
             *) echo "whtvr"
                shift;;
                
          esac;;
          
       LOCAL)
           echo "LOCALing bdata box at $4..." >> /tmp/ianson.log
           #SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/blctrl setup
	   SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/blctrl local
	   #SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/bdata_control reset $4
           #echo $SOUNDSTATE_PATH/asound.state.nosound > /tmp/soundstate
	   #alsactl restore -f $(cat /tmp/soundstate)
           SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/mark_ready2 $1 
           #killall vlc
           
           ;;
           
       RESETLOCAL)
           SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/blctrl setup
	   SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/blctrl local
           echo "RESETLOCALing bdata box at $4..." >> /tmp/ianson.log
	   if [ -z $NO_BDATA_CTRL ]; then SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/bdata_control reset $4; fi
           if [[ -e /tmp/vp_pid ]] ; then
              kill -9 $(cat /tmp/vp_pid)
              rm -f /tmp/vp_pid
           fi         
           if [[ -e /tmp/promoalreadyplayinggraphic_pid ]] ; then
              kill -9 $(cat /tmp/promoalreadyplayinggraphic_pid)
              rm -f /tmp/promoalreadyplayinggraphic_pid
              killall -9 mtpaint
           fi
           killall -9 vlc
           SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/mark_ready2 $1

           ;;         
       announcement)
	   echo "$(date):announcing $1 $2">>/tmp/ianson.log;
           if [[ ! -p /tmp/vlc_sound.log ]] ;then rm /tmp/vlc_sound.log;  mkfifo /tmp/vlc_sound.log; fi
	   #alsactl restore -f $SOUNDSTATE_PATH/asound.state.sound
           ###alsactl restore -f $SOUNDSTATE_PATH/asound.state.noinput
           if [[ -e /tmp/vlc_sound_pid ]] ;then 
           	/usr/bin/echo "$(date) aborting previous sound" >> /tmp/ianson.log 
                /usr/bin/kill -9 $(/bin/cat /tmp/vlc_sound_pid); 
                killall -9 sound_end_filter;
                sleep 2
           fi
           #/usr/bin/killall sound_end_filter
           DISPLAY=:0.0 $VLC_PATH/vlc  $2 --no-repeat > /tmp/vlc_sound.log 2>&1 &
           echo $! >/tmp/vlc_sound_pid
           SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/mark_ready2 announcing
             
           /bin/cat /tmp/vlc_sound.log | $SCRIPT_PATH/sound_end_filter
           SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/mark_ready2 $1
           killall -9 sound_end_filter
           rm /tmp/vlc_sound_pid
           # this is set in .xinitrc, and is constant.
	   ###alsactl restore -f $SOUNDSTATE_PATH/asound.state.sound
         ;;
       xrestart)  
           killall X
           ;;
       playmedialist)
           if [ ! -e /tmp/vp_pid ] ; then
	     SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/mark_ready2 $1&
             DISPLAY=:0.1 vlc --fullscreen --repeat $2 & 
             echo $! > /tmp/vp_pid
           else 
             echo "Uh, promo can't be started because it's already running as PID "$! >> /tmp/ianson.log
             if [[ ! -e /tmp/promoalreadyplayinggraphic_pid ]] ; then
                $SCRIPT_PATH/showgraphic promoalreadyplaying.jpg &
                echo $! > /tmp/promoalreadyplayinggraphic_pid
                
             fi
           fi
           ;;
       
       playpromo)
           if [ ! -e /tmp/vp_pid ] ; then
	     SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/mark_ready2 $1&
             DISPLAY=:0.1 vlc --fullscreen --repeat dvd:///dev/hda & 
             echo $! > /tmp/vp_pid
           else 
             echo "Uh, promo can't be started because it's already running as PID "$! >> /tmp/ianson.log
             if [[ ! -e /tmp/promoalreadyplayinggraphic_pid ]] ; then
                $SCRIPT_PATH/showgraphic promoalreadyplaying.jpg &
                echo $! > /tmp/promoalreadyplayinggraphic_pid
                
             fi
           fi
           ;;
       killpromo)
           VP_PID="tracked"
           SCRIPT_PATH=$SCRIPT_PATH $SCRIPT_PATH/mark_ready2 $1&
           if [[ -e /tmp/vp_pid ]] ; then
              VP_PID=$(cat /tmp/vp_pid)
              echo "Killing $VP_PID and removing /tmp/vp_pid" >> /tmp/ianson.log
              kill -9 $(cat /tmp/vp_pid)
              rm -f /tmp/vp_pid
           fi

           P=$( ps --context -C vlc | grep 'dvd' | awk '{print $6}' )
           if [[ $P = "dvd:///dev/hda" ]] ; then
              J=$( ps --context -C vlc | grep 'dvd' | awk '{print $1}')
              echo "Killing PID $J which is the video promo but maybe wasn't $VP_PID"
              kill -9 $J
           fi
           ;;
       killwarning)
           if [[ -e /tmp/promoalreadyplayinggraphic_pid ]] ; then
              rm -f /tmp/promoalreadyplayinggraphic_pid
           fi
          
           P=$(ps -C shoimg | awk '{print $4}' | sed 's/CMD//' )
           if [[ -n $P ]] ; then
              killall -9 shoimg
           else
             echo "killwarning called but no warning graphics found" >> /tmp/ianson.log
           fi
           
           ;;                                                               
       *) echo "$(date):whatever for \$1 : $1">>/tmp/ianson.log
          shift;;
          
    esac


